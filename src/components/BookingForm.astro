---
export interface Props {
  variant?: "default" | "compact" | "inline";
  uuid?: string;
  affiliateId?: string;
}

const {
  variant = "default",
  uuid = "9efe86c2-31c3-4038-ac5c-94e6a62b9350",
  affiliateId,
} = Astro.props;

const variantClasses = {
  default: "my-8",
  compact: "my-4",
  inline: "my-2",
};
---

<div class={`booking-wrapper ${variantClasses[variant]}`}>
  <div
    class="embedded-booking"
    data-url="https://bookings.withotto.app"
    data-query={`&t=s&uuid=${uuid}`}
    data-lang="en"
    data-autoresize="0"
    data-showsidebar="1"
    data-showservices="0"
    style="min-width: 320px; height: 768px;">
  </div>

  <script is:inline define:vars={{ affiliateId }}>
    // Add ref parameter to booking form if present in URL
    (function () {
      try {
        // Prefer hardcoded affiliateId, fallback to query parameter
        const refValue = affiliateId || window.affiliateId;

        if (refValue) {
          console.log("Adding ref parameter to booking form:", refValue);
          const bookingDiv = document.querySelector(".embedded-booking");
          if (bookingDiv) {
            const currentQuery = bookingDiv.getAttribute("data-query") || "";
            const newQuery =
              currentQuery + "&ref=" + encodeURIComponent(refValue);
            bookingDiv.setAttribute("data-query", newQuery);
          }
        }
      } catch (error) {
        // Silently handle any errors - booking form will work without ref parameter
      }
    })();
  </script>

  <script
    is:inline
    type="text/javascript"
    src="https://bookings.withotto.app/embed.js"
    async></script>
</div>

<style>
  .booking-wrapper {
    @apply mx-auto max-w-4xl;
  }

  .booking-wrapper.compact {
    @apply max-w-2xl;
  }

  .booking-wrapper.inline {
    @apply max-w-xl;
  }
</style>
