---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { Picture } from "astro:assets";

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <Container>
    <div class="mx-auto mt-14 max-w-3xl text-center">
      <span class="text-sm font-medium uppercase tracking-wider text-primary">
        {entry.data.category}
      </span>
      <h1
        class="mt-1 text-4xl font-bold lg:text-5xl lg:leading-tight lg:tracking-tight">
        {entry.data.title}
      </h1>
      <div
        class="mt-3 flex flex-wrap items-center justify-between gap-2 border-t border-primary-soft pt-6 md:flex-nowrap">
        <div class="flex items-center gap-2">
          <time
            class="text-default-soft"
            datetime={entry.data.publishDate.toISOString()}>
            {
              entry.data.publishDate.toLocaleString("en-GB", {
                weekday: "long",
                day: "numeric",
                month: "long",
                year: "numeric",
              })
            }
          </time>
        </div>
        <div class="flex flex-wrap items-center gap-3">
          <span>Share</span>
          <button
            class="flex h-7 w-7 items-center justify-center rounded-full bg-primary-soft">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              version="1.1"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              width="10"
              height="10"
              x="0"
              y="0"
              class="text-primary"
              viewBox="0 0 155.139 155.139"
              style="enable-background:new 0 0 512 512"
              xml:space="preserve"
              class="">
              <g>
                <path
                  d="M89.584 155.139V84.378h23.742l3.562-27.585H89.584V39.184c0-7.984 2.208-13.425 13.67-13.425l14.595-.006V1.08C115.325.752 106.661 0 96.577 0 75.52 0 61.104 12.853 61.104 36.452v20.341H37.29v27.585h23.814v70.761h28.48z"
                  fill="currentColor"
                  opacity="1">
                </path>
              </g>
            </svg>
          </button>
          <button
            class="flex h-7 w-7 items-center justify-center rounded-full bg-primary-soft">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              version="1.1"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              width="10"
              height="10"
              x="0"
              y="0"
              viewBox="0 0 512 512"
              class="text-primary"
              style="enable-background:new 0 0 512 512"
              xml:space="preserve">
              <g>
                <path
                  d="M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z"
                  style=""
                  fill="currentColor"
                  opacity="1">
                </path>
              </g>
            </svg>
          </button>
          <button
            class="flex h-7 w-7 items-center justify-center rounded-full bg-primary-soft">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              version="1.1"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              width="10"
              height="10"
              x="0"
              y="0"
              class="text-primary"
              viewBox="0 0 100 100"
              style="enable-background:new 0 0 512 512"
              xml:space="preserve">
              <g>
                <path
                  d="M90 90V60.7c0-14.4-3.1-25.4-19.9-25.4-8.1 0-13.5 4.4-15.7 8.6h-.2v-7.3H38.3V90h16.6V63.5c0-7 1.3-13.7 9.9-13.7 8.5 0 8.6 7.9 8.6 14.1v26H90zM11.3 36.6h16.6V90H11.3zM19.6 10c-5.3 0-9.6 4.3-9.6 9.6s4.3 9.7 9.6 9.7 9.6-4.4 9.6-9.7-4.3-9.6-9.6-9.6z"
                  fill="currentColor"
                  opacity="1">
                </path>
              </g>
            </svg>
          </button>
        </div>
      </div>
      <div class="mt-6">
        {
          entry.data.image && (
            <div class="relative mt-6">
              <figure>
                <Picture
                  src={entry.data.image}
                  alt={entry.data.imageAlt}
                  widths={[400, 768, 1024, 2040]}
                  width={1200}
                  height={800}
                  layout="constrained"
                  fit="cover"
                  position="center"
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  loading="eager"
                  format="avif"
                  class="w-full rounded-md"
                  aria-describedby="image-description"
                />
                <figcaption class="sr-only" id="image-description">
                  {entry.data.imageDescription}
                </figcaption>
              </figure>
              {entry.data.imageCredit && (
                <p class="mt-2 text-center text-sm text-gray-500">
                  Photo by
                  {entry.data.imageCreditUrl ? (
                    <a
                      href={entry.data.imageCreditUrl}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-primary hover:underline">
                      {entry.data.imageCredit}
                    </a>
                  ) : (
                    entry.data.imageCredit
                  )}
                  {!entry.data.imageCreditUrl &&
                  entry.data.imageCredit.toLowerCase().includes("unsplash")
                    ? ""
                    : " on Unsplash"}
                </p>
              )}
            </div>
          )
        }
      </div>
    </div>

    <div
      class="prose prose-lg mx-auto mt-8 max-w-3xl prose-blockquote:rounded-md prose-blockquote:border prose-blockquote:border-primary-accent prose-blockquote:bg-primary-soft prose-blockquote:px-10 prose-blockquote:py-6 prose-blockquote:text-2xl prose-blockquote:not-italic">
      <Content />
      <div class="mx-auto mt-6 flex max-w-3xl flex-wrap gap-3">
        {
          entry.data.tags.map((tag) => (
            <span class="text-sm text-gray-500">#{tag}</span>
          ))
        }
      </div>
    </div>
    <div class="mb-16 mt-8 text-center">
      <a
        href="/blog/"
        class="rounded-md bg-gray-100 px-5 py-3 transition hover:bg-gray-200">
        ‚Üê Back to Blog
      </a>
    </div>
  </Container>
</Layout>
